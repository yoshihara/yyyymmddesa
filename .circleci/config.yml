container_config: &container_config
  docker:
    - image: circleci/node:11.3.0

  working_directory: ~/workspace

version: 2
jobs:
  test:
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - "./node_modules"

      - run: npm test

  check_outdated_npm_package:
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - "./node_modules"

      - run: sudo npm install -g npm-check-updates

      - run:
          name: show outdated npm packages
          command: npm outdated || echo "succeed command focely"

      - run:
          name: show upgrade npm packages regardless of version lock
          command: /usr/local/bin/npm-check-updates

workflows:
  version: 2
  build_and_test:
    jobs:
      - test

  build_and_check_outdated_package:
    jobs:
      - check_outdated_npm_package
    triggers:
      - schedule:
          cron: "0 4 * * 0" # sunday at 13:00 (UTF+9)
          filters:
            branches:
              only:
                - master
